@tailwind base;
@tailwind components;
@tailwind utilities;

body { /* Added from styles/globals.css */
  font-family: Arial, Helvetica, sans-serif;
}

@layer base {
  :root { /* Consolidated dark theme variables here */
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
    
    /* Card variables based on app/globals.css dark theme */
    --card-h: 0;
    --card-s: 0%;
    --card-l: 0%; /* From --card: 0 0% 0%; */
    --card-foreground: 0 0% 100%;
    
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 90% 50%;
    --primary-foreground: 210 40% 98%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    
    /* Border variables based on app/globals.css dark theme */
    --border-h: 217.2;
    --border-s: 32.6%;
    --border-l: 17.5%; /* From --border: 217.2 32.6% 17.5%; */

    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --radius: 0.5rem;

    /* Sidebar variables from styles/globals.css */
    --sidebar-background: 203 69% 5%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@keyframes moveBlob1 {
  0%, 100% {
    transform: translate(-10%, -10%) scale(1);
    opacity: 0.7;
  }
  25% {
    transform: translate(30%, -20%) scale(1.1);
    opacity: 0.6;
  }
  50% {
    transform: translate(20%, 30%) scale(0.9);
    opacity: 0.8;
  }
  75% {
    transform: translate(-20%, 20%) scale(1.2);
    opacity: 0.5;
  }
}

@keyframes moveBlob2 {
  0%, 100% {
    transform: translate(10%, 10%) scale(1);
    opacity: 0.7;
  }
  25% {
    transform: translate(-30%, 20%) scale(1.2);
    opacity: 0.5;
  }
  50% {
    transform: translate(-20%, -30%) scale(0.8);
    opacity: 0.8;
  }
  75% {
    transform: translate(20%, -20%) scale(1.1);
    opacity: 0.6;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  html { /* Simplified selector */
    position: relative;
    overflow-x: hidden; /* Prevent horizontal scroll from blobs */
    background: linear-gradient(to bottom, rgb(6, 20, 5) 40%, rgb(8, 75, 16) 75%, #000000b9 100%) !important;
    min-height: 100vh; /* Ensure gradient covers full viewport height */
  }

  html::before,
  html::after {
    content: "";
    position: fixed;
    left: 1/2;
    top: 10%;
    width: 100vmax; /* Large blobs */
    height: 100vmax;
    border-radius: 100%;
    z-index: -1; /* Behind content */
    mix-blend-mode: lighten; /* Or lighten, experiment for desired effect */
    filter: blur(50px); /* Soft edges */
  }

  html::before {
    background-color: rgb(0, 0, 0); /* First blob color */
    animation: moveBlob1 25s infinite alternate ease-in-out;
  }

  html::after {
    background-color: #26b32654; /* Second blob color */
    animation: moveBlob2 30s infinite alternate ease-in-out -5s; /* Offset animation */
  }

  body {
    @apply bg-transparent text-foreground !important; /* Make body background transparent */
    min-height: 100vh;
    position: relative; /* Ensure body content is above pseudo-elements */
    z-index: 1;
  }

  /* Glassmorphism styles for specified elements */
  .card,
  .modal-box,
  .container,
  .styled-container,
  .btn {
    background-color: hsla(var(--card-h), var(--card-s), var(--card-l), 0.5) !important; /* 50% transparent card background */
    -webkit-backdrop-filter: blur(8px); /* Safari support, user changed blur to 8px in app/globals.css previously */
    backdrop-filter: blur(8px); /* User changed blur to 8px in app/globals.css previously */
    border: 1px solid hsla(var(--border-h), var(--border-s), 10%, 0.6) !important; /* Darker, more opaque border */
  }
}

.shadow-top {
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
  .pb-safe {
    padding-bottom: env(safe-area-inset-bottom);
  }
}

/* Hide scrollbar for Chrome, Safari and Opera */
.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.scrollbar-hide {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/* Reset margins and padding, allow scrolling */
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  overflow: auto; /* changed from hidden */
}

/* Full screen map container */
.fullscreen-map-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 10;
}

.fullscreen-map {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.user-location-marker {
  z-index: 2;
  transition: transform 0.3s ease;
}

.direction-indicator {
  transition: transform 0.3s ease;
}

.mapboxgl-popup-content {
  padding: 12px;
  border-radius: 6px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

/* Make sure mapbox container fills its parent */
.mapboxgl-map {
  width: 100%;
  height: 100%;
}

/* Update the CSS to exclude the map container */
.fullscreen-map-container,
.fullscreen-map-container *:not(.map-container) {
  color-scheme: light !important;
  background-color: white;
  color: black;
}

/* Add specific styling for the map container */
.map-container {
  background: transparent !important;
}

/* Responsive modal styles */
.responsive-modal {
  width: 95vw !important;
  max-height: 80vh !important;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.responsive-modal > div {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.responsive-tabs {
  display: flex;
  flex-direction: column;
  flex: 1;
  min-height: 0;
  overflow: hidden;
}

.responsive-tabs-list {
  flex-shrink: 0;
}

@media (max-width: 768px) {
  .responsive-tabs-list {
    background-color: #4b4b4b62 !important;
  }

  .responsive-tab {
    color: rgba(255, 255, 255, 0.466) !important;
  }

  .responsive-tab[data-state="active"] {
    background-color: #98d058 !important;
    color: white !important;
    font-weight: bold;
  }
}

.responsive-tab-content {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
  max-height: calc(80vh - 200px);
}

.modal-footer {
  flex-shrink: 0;
  margin-top: auto;
}

@media (max-width: 640px) {
  .tab-text {
    font-size: 0.75rem;
  }
}

/* Debug class to test dark mode */
.theme-debug {
  position: fixed;
  bottom: 10px;
  right: 10px;
  padding: 5px;
  background: var(--background);
  color: var(--foreground);
  border: 1px solid var(--border);
  z-index: 9999;
  font-size: 12px;
}

/* Custom utility to hide scrollbar but keep scrollability */
.hide-scrollbar::-webkit-scrollbar {
  display: none; /* Safari and Chrome */
}
.hide-scrollbar {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}
